From cea49ddcff404279921d1fdbeae16703bda1213a Mon Sep 17 00:00:00 2001
From: darklord4822 <darklord4722@gmail.com>
Date: Sun, 18 Feb 2018 08:52:32 +0000
Subject: [PATCH] changes for MTK

Change-Id: Ib60cbc88fef28a902f82d7c47a515484dac53976
---
 audio/2.0/default/Android.mk               | 4 ++++
 audio/2.0/default/StreamOut.cpp            | 3 +++
 camera/device/1.0/default/CameraDevice.cpp | 5 ++++-
 sensors/1.0/default/Sensors.cpp            | 2 +-
 4 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/audio/2.0/default/Android.mk b/audio/2.0/default/Android.mk
index 8dec482..8fc5131 100644
--- a/audio/2.0/default/Android.mk
+++ b/audio/2.0/default/Android.mk
@@ -51,6 +51,10 @@ LOCAL_HEADER_LIBRARIES := \
 
 LOCAL_WHOLE_STATIC_LIBRARIES := libmedia_helper
 
+ifeq ($(SUPPRESS_MTK_AUDIO_BLOB_ERR_MSG),true)
+LOCAL_CFLAGS = -DSUPPRESS_MTK_AUDIO_BLOB_ERR_MSG
+endif
+
 include $(BUILD_SHARED_LIBRARY)
 
 #
diff --git a/audio/2.0/default/StreamOut.cpp b/audio/2.0/default/StreamOut.cpp
index 22dcd0c..81f1d58 100644
--- a/audio/2.0/default/StreamOut.cpp
+++ b/audio/2.0/default/StreamOut.cpp
@@ -488,6 +488,9 @@ Result StreamOut::getPresentationPositionImpl(audio_stream_out_t* stream,
     // continuously querying it, but the stream has been stopped.
     static const std::vector<int> ignoredErrors{EINVAL, EAGAIN, ENODATA};
     Result retval(Result::NOT_SUPPORTED);
+#ifdef SUPPRESS_MTK_AUDIO_BLOB_ERR_MSG
+    if (true) return retval;
+#endif
     if (stream->get_presentation_position == NULL) return retval;
     struct timespec halTimeStamp;
     retval = Stream::analyzeStatus("get_presentation_position",
diff --git a/camera/device/1.0/default/CameraDevice.cpp b/camera/device/1.0/default/CameraDevice.cpp
index a03bbc8..d02fe63 100644
--- a/camera/device/1.0/default/CameraDevice.cpp
+++ b/camera/device/1.0/default/CameraDevice.cpp
@@ -36,6 +36,8 @@ using ::android::hardware::graphics::common::V1_0::PixelFormat;
 
 HandleImporter CameraDevice::sHandleImporter;
 
+CameraDevice* sUser = nullptr;
+
 Status CameraDevice::getHidlStatus(const int& status) {
     switch (status) {
         case 0: return Status::OK;
@@ -361,7 +363,7 @@ CameraDevice::CameraHeapMemory::~CameraHeapMemory() {
 // shared memory methods
 camera_memory_t* CameraDevice::sGetMemory(int fd, size_t buf_size, uint_t num_bufs, void *user) {
     ALOGV("%s", __FUNCTION__);
-    CameraDevice* object = static_cast<CameraDevice*>(user);
+    CameraDevice* object = (user == nullptr)? sUser : static_cast<CameraDevice*>(user);
     if (object->mDeviceCallback == nullptr) {
         ALOGE("%s: camera HAL request memory while camera is not opened!", __FUNCTION__);
         return nullptr;
@@ -669,6 +671,7 @@ Return<Status> CameraDevice::open(const sp<ICameraDeviceCallback>& callback) {
     mDeviceCallback = callback;
 
     if (mDevice->ops->set_callbacks) {
+        sUser = this;
         mDevice->ops->set_callbacks(mDevice,
                 sNotifyCb, sDataCb, sDataCbTimestamp, sGetMemory, this);
     }
diff --git a/sensors/1.0/default/Sensors.cpp b/sensors/1.0/default/Sensors.cpp
index 1100dd6..c41a744 100644
--- a/sensors/1.0/default/Sensors.cpp
+++ b/sensors/1.0/default/Sensors.cpp
@@ -95,7 +95,7 @@ Sensors::Sensors()
 
     // Require all the old HAL APIs to be present except for injection, which
     // is considered optional.
-    CHECK_GE(getHalDeviceVersion(), SENSORS_DEVICE_API_VERSION_1_3);
+    CHECK_GE(getHalDeviceVersion(), SENSORS_DEVICE_API_VERSION_1_0);
 
     if (getHalDeviceVersion() == SENSORS_DEVICE_API_VERSION_1_4) {
         if (mSensorDevice->inject_sensor_data == nullptr) {
-- 
1.9.1

